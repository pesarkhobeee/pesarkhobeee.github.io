
new ReadJSONFeedTask().execute(url);






	public String readJSONFeed(String URL) {
		StringBuilder stringBuilder = new StringBuilder();
		HttpClient client = new DefaultHttpClient();
		HttpGet httpGet = new HttpGet(URL);
		try {
			HttpResponse response = client.execute(httpGet);
			StatusLine statusLine = response.getStatusLine();
			int statusCode = statusLine.getStatusCode();
			if (statusCode == 200) {
				HttpEntity entity = response.getEntity();
				InputStream content = entity.getContent();
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(content));
				String line;
				while ((line = reader.readLine()) != null) {
					stringBuilder.append(line);
				}
			} else {
				Log.e("JSON", "Failed to download file");
			}
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return stringBuilder.toString();
	}





    private class ReadJSONFeedTask extends AsyncTask<String, Void, String> {
        @Override
		protected String doInBackground(String... urls) {
            return readJSONFeed(urls[0]);
        }
        
        @Override
		protected void onPostExecute(String result) {
        	
        	try {
        		
        		new faridtester(result);

        		
        	} catch (Exception e) {
        	    // TODO Auto-generated catch block
        	    e.printStackTrace();
        	} 
        	
        }
        
    }
